rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default-deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Publicly readable collections
    match /articles/{articleId} { allow read: if true; }
    match /categories/{categoryId} { allow read: if true; }
    match /media/{mediaId} { allow read: if true; }
    match /teams/{teamId} { allow read: if true; }
    match /sponsors_public_view/{docId} { allow read: if true; }
    match /navetane_public_views/{docId} { allow read: if true; }
    match /finals_public_view/{docId} { allow read: if true; }
    match /navetane_stats/public_view { allow read: if true; }
    
    // Comments can be read and created by anyone
    match /comments/{commentId} {
      allow read, create: if true;
    }
    
    // Polls can be read and written to by anyone (to vote)
    match /polls/{pollId} {
      allow read, write: if true;
    }

    // Admin-only write access
    // This single rule covers all collections that should be admin-writable
    match /{collectionId}/{docId} {
      allow write: if request.auth != null;
    }
    
    // Specific admin-only write rules if needed, but the above is generally sufficient.
    // For example, if you wanted to lock down comments deletion to admins only:
    match /comments/{commentId} {
       allow update, delete: if request.auth != null;
    }
  }
}
